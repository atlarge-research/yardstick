---
- name: Deploy Luanti Server
  gather_facts: true
  hosts: all
  tasks:
    - file:
        path: "{{ wd }}"
        state: directory

    - name: Download Luanti (Engine)
      get_url:
        url: https://github.com/luanti-org/luanti/releases/download/5.11.0/luanti_5.11.0-linux-x86_64.tar.gz
        dest: "{{ wd }}/luanti-5.11.0-linux-x86_64.tar.gz"

    - name: Extract Luanti package
      ansible.builtin.unarchive:
        src: "{{ wd }}/luanti-5.11.0-linux-x86_64.tar.gz"
        dest: "{{ wd }}"
        remote_src: yes

    # Rename to match our naming convention
    - name: Rename directory to luanti
      shell: |
        mv {{ wd }}/minetest-* {{ wd }}/luanti-5.11.0
      args:
        creates: "{{ wd }}/luanti-5.11.0"

    # Handle different game modes
    - name: Set up Minetest game (default)
      block:
        - name: Ensure default Minetest game is available
          file:
            path: "{{ wd }}/luanti-5.11.0/games/minetest_game"
            state: directory
      when: game_mode == "minetest" or game_mode is not defined

    - name: Set up Extra Ordinance game
      block:
        - name: Install git
          package:
            name: git
            state: present
          become: yes
          ignore_errors: yes

        - name: Clone Extra Ordinance repository
          git:
            repo: "{{ extra_ordinance_repo }}"
            dest: "{{ wd }}/luanti-5.11.0/games/extra_ordinance"

        - name: Update minetest.conf for Extra Ordinance
          lineinfile:
            path: "{{ wd }}/luanti-5.11.0/minetest.conf"
            line: "default_game = extra_ordinance"
            create: yes
      when: game_mode == "extra_ordinance"

    - name: Set up custom game
      block:
        - name: Install git
          package:
            name: git
            state: present
          become: yes
          ignore_errors: yes

        - name: Clone custom game repository
          git:
            repo: "{{ custom_game_url }}"
            dest: "{{ wd }}/luanti-5.11.0/games/custom_game"

        - name: Update minetest.conf for custom game
          lineinfile:
            path: "{{ wd }}/luanti-5.11.0/minetest.conf"
            line: "default_game = custom_game"
            create: yes
      when: game_mode == "custom" and custom_game_url is defined

    - name: Copy config file
      template:
        src: "{{luanti_template}}"
        dest: "{{wd}}/luanti-5.11.0/minetest.conf"
        force: no

    - name: Create mods directory
      file:
        path: "{{ wd }}/luanti-5.11.0/mods/yardstick_collector"
        state: directory

    - name: Create Yardstick collector mod
      copy:
        dest: "{{ wd }}/luanti-5.11.0/mods/yardstick_collector/init.lua"
        content: |
          -- Yardstick collector mod for Luanti engine
          local http = minetest.request_http_api()
          local metric_data = {}
          local last_tick_time = os.clock()

          -- Collect metrics on each server step
          minetest.register_globalstep(function(dtime)
              local current_time = os.clock()
              local tick_duration = current_time - last_tick_time
              last_tick_time = current_time
              
              metric_data.tick_duration = tick_duration
              metric_data.player_count = #minetest.get_connected_players()
              metric_data.timestamp = os.time()
              
              -- Get packet stats if available
              local stats = minetest.get_server_stats()
              if stats then
                  metric_data.packets_in = stats.packets_in or 0
                  metric_data.packets_out = stats.packets_out or 0
              end
              
              -- Log metrics for local testing
              minetest.log("action", string.format(
                  "METRICS: tick_duration=%.6f, players=%d, packets_in=%d, packets_out=%d",
                  metric_data.tick_duration,
                  metric_data.player_count,
                  metric_data.packets_in or 0,
                  metric_data.packets_out or 0
              ))
              
              -- Expose metrics via HTTP API for collection
              if http then
                  http.expose_metrics("/metrics", function()
                      local output = ""
                      output = output .. "luanti_tick_duration_seconds " .. metric_data.tick_duration .. "\n"
                      output = output .. "luanti_player_count " .. metric_data.player_count .. "\n"
                      output = output .. "luanti_packet_in_total " .. (metric_data.packets_in or 0) .. "\n"
                      output = output .. "luanti_packet_out_total " .. (metric_data.packets_out or 0) .. "\n"
                      return output
                  end)
              end
          end)

          minetest.log("action", "Yardstick collector mod initialized")
