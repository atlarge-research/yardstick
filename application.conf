
benchmark {

    // there is typically no reason to change these
    directories {
        // contains input data such as server JARs and configuration files
        input = "input"
        // contains conf files that are merged with this configuration,
        // allows running the benchmark with several parameter configurations
        configs = "configs"
        // contains raw output files (e.g., stdout from server JAR)
        raw-output = "raw-output"
        // contains scripts to transform the raw output into processed output
        raw-output-scripts = "raw-output-scripts"
        // contains processed output files, ready for plotting
        output = "output"
    }

    iterations = 1

    provisioning {
        method = "static"
        // Used for static provisioning
        static {
            ips = ["localhost", "localhost"]
        }
    }

    game {
        architecture = "jar"
        // Used for the single-server game architecture
        jar {
            path {
                local = "server.jar"
            }
            jvm.options = [
                "-Xms2G",
                "-Xmx2G",
            ]
            arguments = [
                "--nogui"
            ]
        }
        resources = [
            { local = "eula.txt" },
            { local = "server.properties" },
        ]
        // Used for the serverless-alpha game architecture
        serverless-alpha {
            memory = 2048
            cpu = 256
            // Script to deploy the game and retrieve application-level metrics
            // Must inherit from plugins/game.py
            script = "plugins/"${benchmark.game.architecture}".py"
        }
    }

    player-emulation {
        number-of-nodes = 1
        path = "yardstick.jar"
        jvm.options = [
            "-Xms32G",
            "-Xmx32G",
        ]
        arguments {
            game-architecture = ${benchmark.game.architecture}
            packet-trace = false
            duration = 30s
            bot-speed = 0.3
            behavior {
                name = "11"
                "2" {
                    bots = 10
                    interval = 1s
                }
                // Used for experiment 4
                "4" {
                    bots = 50
                    joininterval = 5s
                    numbotsperjoin = 5
                    boxDiameter = 32
                    spawnAnchor = true
                }
                "9" {
                    spikeDelayInSeconds = 0s
                    spikeDurationInSeconds = 0s
                    spikePeakPlayers = 0
                }
                "10" {
                    bots = 50
                }
                // Used for experiment id 11
                "11" {

                }
            }
        }
    }

    plots = [
        {
            prep = "response-time.py"
            data = "response-time.txt"
            plot = "response-time.R"
        }
    ]
}
